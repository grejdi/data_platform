
name: main

on:
  # allows you to run this workflow manually
  workflow_dispatch:

jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # job env variables
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
      AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}

    steps:
      - name: Checkout repository code.
        uses: actions/checkout@v2

      - name: Zip up package and place in aws/s3/.
        working-directory: ${{github.workspace}}
        run: zip -r ./aws/s3/packages/data_platform.zip ./data_platform/

      - name: Sync aws/s3/ to s3://grejdi.data-platform/.
        run: aws s3 sync ${{github.workspace}}/aws/s3/ s3://grejdi.data-platform/operations/ --exclude "*/empty"

      - name: Build container.
        working-directory: ${{github.workspace}}
        run: docker build --tag ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_DEFAULT_REGION}}.amazonaws.com/dataplatform:main-latest .

      - name: Get repository login.
        run: aws ecr get-login-password | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_DEFAULT_REGION}}.amazonaws.com/dataplatform

      - name: Push to repository.
        run: docker push ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_DEFAULT_REGION}}.amazonaws.com/dataplatform:main-latest

      - name: Run task.
        uses: grejdi/actions/amazon_ecs__run_task@v1
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_default_region: ${{secrets.AWS_DEFAULT_REGION}}
          ecs_cluster: arn:aws:ecs:${{secrets.AWS_DEFAULT_REGION}}:${{secrets.AWS_ACCOUNT_ID}}:cluster/dataplatform
          ecs_task_definition: arn:aws:ecs:${{secrets.AWS_DEFAULT_REGION}}:${{secrets.AWS_ACCOUNT_ID}}:task-definition/dataplatform
          ecs_task_network_configuration: "awsvpcConfiguration={subnets=[subnet-0a99fcc9c9fe1de79],securityGroups=[sg-06ac1dfad4ebcebb4],assignPublicIp=ENABLED}"
          ecs_task_overrides: '{ "containerOverrides": [ { "name": "dataplatform", "command": ["python", "--version"] } ] }'
